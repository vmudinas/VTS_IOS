name: iOS Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Set up Ruby for CocoaPods
        if: hashFiles('**/Podfile') != ''
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          
      - name: Cache CocoaPods
        if: hashFiles('**/Podfile') != ''
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
            
      - name: Install CocoaPods Dependencies
        if: hashFiles('**/Podfile') != ''
        run: pod install
          
      - name: Cache Build Artifacts
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.xcodeproj/**') }}
          restore-keys: |
            ${{ runner.os }}-xcode-
          
      - name: Build and Test
        run: |
          set -o pipefail
          xcodebuild test \
            -project VTS_IOS.xcodeproj \
            -scheme VTS_IOS \
            -destination "platform=iOS Simulator,name=iPhone 14,OS=latest" \
            -enableCodeCoverage YES \
            | tee build_output.log | xcpretty && exit ${PIPESTATUS[0]}
          echo "Build completed with status $?"
            
      - name: Generate Code Coverage Report
        run: |
          xcresult_path=$(find ~/Library/Developer/Xcode/DerivedData -name "*.xcresult" | head -n 1)
          if [ -n "$xcresult_path" ]; then
            xcrun xccov view --report --json "$xcresult_path" > coverage.json
            echo "Generated coverage report from $xcresult_path"
          else
            echo "No .xcresult files found"
            touch coverage.json  # Create empty file so upload doesn't fail
          fi
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/*.xcresult
            coverage.json
            build_output.log
            **/*.log